#!/bin/bash
#Made by AlchemiistCreative for security and education purpose

version=1.0.0
function version()
{
    echo "crt-exploit.sh"
    echo "Current version: $version"
}

function get_help()
{
   # Display Help
   echo -e "\e[93m\e[1mcrt-exploit.sh\e[0m\e[39m"
   echo " "
   echo "Reports and automatisation tool based on crt.sh data"
   echo
   echo "Syntax: crt-exploit.sh [-s|l|h]"
   echo "options:"
   echo "s     Scan open ports for each related domain found. Example: crt-exploit.sh -s example.com"
   echo "l     List each related domain found. Example: crt-exploit.sh -l example.com"
   echo "i     Check http info for each related domain found. Example: crt-exploit.sh -i example.com"
   echo "h     Print help "
   echo "V     Print software version and exit."
   echo
}



function scan_ports(){

    hosts=$(curl --silent 'https://crt.sh/?q='$1'' |grep "<TD>" |grep -v white-space |cut -d ">" -f2 |cut -d "<" -f1 |sort -u)

    echo -e "\e[93m\e[1mReport of open ports for $1\e[0m\e[39m"

    for host in $hosts
    do 
    IP=$(host "$host" | grep "has address" | cut -f4 -d' ')
        for ips in $IP
        do
        printf 'Open ports for %s / %s : ' "$host" "$ips"
        echo " "
        open_ports=$(nmap $ips | grep open)
           if [[ -z "$open_ports" ]]; then
           echo "No open ports"
           else
           echo "$open_ports"
           fi
        done
    done

}

function list_domain(){
  
    hosts=$(curl --silent 'https://crt.sh/?q='$1'' |grep "<TD>" |grep -v white-space |cut -d ">" -f2 |cut -d "<" -f1 |sort -u)
    echo -e "\e[93m\e[1mDomain list for $1\e[0m\e[39m"

    for host in $hosts
    do 
    IP=$(host "$host" | grep "has address" | cut -f4 -d' ')
        for ips in $IP
        do
        printf 'FQDN: %s has IP: %s ' "$host" "$ips"
        echo " "
        done
    done

}


function http_info(){

    hosts=$(curl --silent 'https://crt.sh/?q='$1'' |grep "<TD>" |grep -v white-space |cut -d ">" -f2 |cut -d "<" -f1 |sort -u)

    echo -e "\e[93m\e[1mReport of HTTP server info for $1\e[0m\e[39m"

    for host in $hosts
    do 
    IP=$(host "$host" | grep "has address" | cut -f4 -d' ')
        for ips in $IP
        do
        printf '\e[39m\e[34mHTTP server info for %s / %s : \e[34m\e[39m' "$host" "$ips"
        echo " "
        open_ports=$(nmap $ips -p 80 | grep open)
           if [[ -z "$open_ports" ]]; then
           echo " "
           echo "No HTTP server"
           echo " "
           else
           echo " "
           curl -I $host
           echo " "
           fi
        done
    done

}


while getopts "s:l:i:vh" option; do
   case $option in
      s) # scan
         scan_ports $OPTARG
         ;;
      l) # list
         list_domain $OPTARG
         ;;
      i) # http info
         http_info $OPTARG
         exit;; 
      v) # display version
         version
         exit;; 
      h) # display Help
         get_help
         exit;;
     \?) # Invalid option
         echo "Error: Invalid option"
         exit;;
   esac
done












